<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webteam2.poster4j.dao.ProductDao">
	<select id="selectByPage" parameterType="Pager" resultType="Product">
		<![CDATA[
		select rnum, product_id, product_name, product_price, product_discount_rate, 
			   product_theme, product_artist
		from (
		    select rownum as rnum, product_id, product_name, product_price, product_discount_rate, 
		    	   product_theme, product_artist
		    from (
		        select product_id, product_name, product_price, product_discount_rate, 
		    		   product_theme, product_artist
		        from product
		        order by product_id desc
		    )
		    where rownum <= #{endRowNo}
		)
		where rnum >= #{startRowNo}
		]]>
	</select>
	
	<select id="selectAllById" parameterType="int" resultType="Product">
		select *
		from product
		where product_id=#{productId}
	</select>

	<select id="selectPriceById" parameterType="int" resultType="int">
		select product_price
		from product
		where product_id = #{productId}
	</select> 
	
	<select id="count" resultType="int">
		select count(*) from product
	</select>
	
	<insert id="insertProduct" parameterType="Product">
		<selectKey keyProperty="productId" resultType="int" order="BEFORE">
      		select product_seq.nextval from dual
      	</selectKey>
		<!-- null이 들어갈 수 있는 컬럼값은 반드시 jdbcType을 명시해야 함 -->
		insert into product (product_id, product_name, product_price, product_discount_rate, 
							 product_theme, product_artist, product_detail, product_enabled)
		values(#{productId}, #{productName}, #{productPrice}, #{productDiscountRate}, #{productTheme}, 
			   #{productArtist}, #{productDetail, jdbcType=VARCHAR}, 'TRUE')
	</insert>
	
	<update id="updateProduct" parameterType="Product">
		update product set product_name=#{productName}, product_price=#{productPrice}, product_discount_rate=#{productDiscountRate},
						 product_theme=#{productTheme}, product_artist=#{productArtist}, product_detail=#{productDetail}
		where product_id=#{productId}
	</update>
	
	<delete id="deleteById" parameterType="int">
		delete from product where product_id=#{productId}
	</delete>
	
	<select id="countSearchedProductNum" parameterType="ProductBoardSearch">
		select count(*)
		from product
		<where>
			<if test="productId!=null and !productId.equals('')">
				product_id = #{productId}
			</if>
			
			<!-- 오라클에서 like문 사용 -->
			<if test="productName!=null">
				and product_name like '%'||#{productName}||'%'
			</if>
			
			<!-- 가격 범위 계산 -->
			<!-- 시작값, 끝값 모두 제공됐을 경우 -->
			<if test="(productPriceStart!=null and !productPriceStart.equals('')) and 
					  (productPriceEnd!=null and !productPriceEnd.equals(''))">
				and product_price between #{productPriceStart} and #{productPriceEnd}
			</if>
			<!-- 시작값만 제공됐을 경우 -->
			<if test="(productPriceStart!=null and !productPriceStart.equals('')) and 
					  (productPriceEnd==null or productPriceEnd.equals(''))">
				<![CDATA[
				and product_price >= #{productPriceStart}
				]]>
			</if>
			<!-- 끝값만 제공됐을 경우 -->
			<if test="(productPriceStart==null or productPriceStart.equals('')) and 
					  (productPriceEnd!=null and !productPriceEnd.equals(''))">
				<![CDATA[
				and product_price <= #{productPriceEnd}
				]]>
			</if>
			
			<!-- 할인 범위 계산 -->
			<!-- 시작값, 끝값 모두 제공됐을 경우 -->
			<if test="(productDiscountRateStart!=null and !productDiscountRateStart.equals('')) and 
					  (productDiscountRateEnd!=null and !productDiscountRateEnd.equals(''))">
				and product_discount_rate between #{productDiscountRateStart} and #{productDiscountRateEnd}
			</if>
			<!-- 시작값만 제공됐을 경우 -->
			<if test="(productDiscountRateStart!=null and !productDiscountRateStart.equals('')) and 
					  (productDiscountRateEnd==null or productDiscountRateEnd.equals(''))">
				<![CDATA[
				and product_discount_rate >= #{productDiscountRateStart}
				]]>
			</if>
			<!-- 끝값만 제공됐을 경우 -->
			<if test="(productDiscountRateStart==null or productDiscountRateStart.equals('')) and 
					  (productDiscountRateEnd!=null and !productDiscountRateEnd.equals(''))">
				<![CDATA[
				and product_discount_rate <= #{productDiscountRateEnd}
				]]>
			</if>
			
			<if test="productTheme!=null">
				and product_theme = #{productTheme}
			</if>
			<if test="productArtist!=null">
				and product_artist = #{productArtist}
			</if>
		</where>
	</select>
	
	<select id="selectSearchedProductByPage" parameterType="map" resultType="Product">
		select rnum, product_id, product_name, product_price, product_discount_rate, 
			   product_theme, product_artist, product_detail
		from (
		    select rownum as rnum, product_id, product_name, product_price, product_discount_rate, 
		    	   product_theme, product_artist, product_detail
		    from (
		        select product_id, product_name, product_price, product_discount_rate, 
		    		   product_theme, product_artist, product_detail
		        from product
		        <where>
					<if test="productBoardSearch.productId!=null and !productBoardSearch.productId.equals('')">
						product_id = #{productBoardSearch.productId}
					</if>
					
					<!-- mybatis oracle like문 사용법 -->
					<if test="productBoardSearch.productName!=null">
						and product_name like '%'||#{productBoardSearch.productName}||'%'
					</if>
					
					<!-- 가격 범위 계산 -->
					<!-- 시작값, 끝값 모두 제공됐을 경우 -->
					<if test="(productBoardSearch.productPriceStart!=null and !productBoardSearch.productPriceStart.equals('')) and 
							  (productBoardSearch.productPriceEnd!=null and !productBoardSearch.productPriceEnd.equals(''))">
						and product_price between #{productBoardSearch.productPriceStart} and #{productBoardSearch.productPriceEnd}
					</if>
					<!-- 시작값만 제공됐을 경우 -->
					<if test="(productBoardSearch.productPriceStart!=null and !productBoardSearch.productPriceStart.equals('')) and 
							  (productBoardSearch.productPriceEnd==null or productBoardSearch.productPriceEnd.equals(''))">
						<![CDATA[
						and product_price >= #{productBoardSearch.productPriceStart}
						]]>
					</if>
					<!-- 끝값만 제공됐을 경우 -->
					<if test="(productBoardSearch.productPriceStart==null or productBoardSearch.productPriceStart.equals('')) and 
							  (productBoardSearch.productPriceEnd!=null and !productBoardSearch.productPriceEnd.equals(''))">
						<![CDATA[
						and product_price <= #{productBoardSearch.productPriceEnd}
						]]>
					</if>
					
					<!-- 할인 범위 계산 -->
					<!-- 시작값, 끝값 모두 제공됐을 경우 -->
					<if test="(productBoardSearch.productDiscountRateStart!=null and !productBoardSearch.productDiscountRateStart.equals('')) and 
							  (productBoardSearch.productDiscountRateEnd!=null and !productBoardSearch.productDiscountRateEnd.equals(''))">
						and product_discount_rate between #{productBoardSearch.productDiscountRateStart} and #{productBoardSearch.productDiscountRateEnd}
					</if>
					<!-- 시작값만 제공됐을 경우 -->
					<if test="(productBoardSearch.productDiscountRateStart!=null and !productBoardSearch.productDiscountRateStart.equals('')) and 
							  (productBoardSearch.productDiscountRateEnd==null or productBoardSearch.productDiscountRateEnd.equals(''))">
						<![CDATA[
						and product_discount_rate >= #{productBoardSearch.productDiscountRateStart}
						]]>
					</if>
					<!-- 끝값만 제공됐을 경우 -->
					<if test="(productBoardSearch.productDiscountRateStart==null or productBoardSearch.productDiscountRateStart.equals('')) and 
							  (productBoardSearch.productDiscountRateEnd!=null and !productBoardSearch.productDiscountRateEnd.equals(''))">
						<![CDATA[
						and product_discount_rate <= #{productBoardSearch.productDiscountRateEnd}
						]]>
					</if>
					
					<if test="productBoardSearch.productTheme!=null">
						and product_theme = #{productBoardSearch.productTheme}
					</if>
					<if test="productBoardSearch.productArtist!=null">
						and product_artist = #{productBoardSearch.productArtist}
					</if>
					
				</where>
		        order by product_id desc
		    )
		    where rownum <![CDATA[<=]]> #{pager.endRowNo}
		)
		where rnum <![CDATA[>=]]> #{pager.startRowNo}
	</select>
	
	<select id="selectAll" resultType="Product">
		select *
		from product
	</select>
	
	<select id="selectAllProductId" resultType="int">
		select product_id
		from product
	</select>
	
</mapper>